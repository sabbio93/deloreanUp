/**
 * Deamon Backup API
 * Deamon used to periodically generate volume's backup and send of this backups
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DeamonBackupApi) {
      root.DeamonBackupApi = {};
    }
    root.DeamonBackupApi.VolumeUsageData = factory(root.DeamonBackupApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The VolumeUsageData model module.
   * @module model/VolumeUsageData
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>VolumeUsageData</code>.
   * Usage details about the volume. This information is used by the &#x60;GET /system/df&#x60; endpoint, and omitted in other endpoints. 
   * @alias module:model/VolumeUsageData
   * @class
   * @param size {Number} Amount of disk space used by the volume (in bytes). This information is only available for volumes created with the `\"local\"` volume driver. For volumes created with other volume drivers, this field is set to `-1` (\"not available\") 
   * @param refCount {Number} The number of containers referencing this volume. This field is set to `-1` if the reference-count is not available. 
   */
  var exports = function(size, refCount) {
    var _this = this;

    _this['Size'] = size;
    _this['RefCount'] = refCount;
  };

  /**
   * Constructs a <code>VolumeUsageData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/VolumeUsageData} obj Optional instance to populate.
   * @return {module:model/VolumeUsageData} The populated <code>VolumeUsageData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Size')) {
        obj['Size'] = ApiClient.convertToType(data['Size'], 'Number');
      }
      if (data.hasOwnProperty('RefCount')) {
        obj['RefCount'] = ApiClient.convertToType(data['RefCount'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Amount of disk space used by the volume (in bytes). This information is only available for volumes created with the `\"local\"` volume driver. For volumes created with other volume drivers, this field is set to `-1` (\"not available\") 
   * @member {Number} Size
   */
  exports.prototype['Size'] = undefined;
  /**
   * The number of containers referencing this volume. This field is set to `-1` if the reference-count is not available. 
   * @member {Number} RefCount
   */
  exports.prototype['RefCount'] = undefined;



  return exports;
}));


