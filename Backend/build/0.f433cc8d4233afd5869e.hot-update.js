exports.id = 0;
exports.modules = {

/***/ "./src/app.js":
/***/ (function(module, exports, __webpack_require__) {

var createError = __webpack_require__("http-errors");
var express = __webpack_require__("express");
var path = __webpack_require__("path");
var cookieParser = __webpack_require__("cookie-parser");
var logger = __webpack_require__("morgan");

var indexRouter = __webpack_require__("./src/routes/index.js");
var usersRouter = __webpack_require__("./src/routes/users.js");

var app = express();

// view engine setup
//app.set('views', path.join(__dirname, 'views'))
//app.set('view engine', 'pug')

app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', indexRouter);
app.use('/users', usersRouter);

// catch 404 and forward to error handler
app.use(function (req, res, next) {
  next(createError(404));
});

// error handler
app.use(function (err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;

/***/ })

};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FuZHJlYS9TZWNvbmREaXNrL1dvcmtzcGFjZS9iYWNrdXBJbW9sYWIvZGVsb3JlYW51cC9CYWNrZW5kL3NyYy9hcHAuanMiXSwibmFtZXMiOlsiY3JlYXRlRXJyb3IiLCJyZXF1aXJlIiwiZXhwcmVzcyIsInBhdGgiLCJjb29raWVQYXJzZXIiLCJsb2dnZXIiLCJpbmRleFJvdXRlciIsInVzZXJzUm91dGVyIiwiYXBwIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInN0YXRpYyIsImpvaW4iLCJfX2Rpcm5hbWUiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyIiwibG9jYWxzIiwibWVzc2FnZSIsImVycm9yIiwiZ2V0Iiwic3RhdHVzIiwicmVuZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUMsYUFBUixDQUFsQjtBQUNBLElBQUlDLFVBQVVELG1CQUFPQSxDQUFDLFNBQVIsQ0FBZDtBQUNBLElBQUlFLE9BQU9GLG1CQUFPQSxDQUFDLE1BQVIsQ0FBWDtBQUNBLElBQUlHLGVBQWVILG1CQUFPQSxDQUFDLGVBQVIsQ0FBbkI7QUFDQSxJQUFJSSxTQUFTSixtQkFBT0EsQ0FBQyxRQUFSLENBQWI7O0FBRUEsSUFBSUssY0FBY0wsbUJBQU9BLENBQUMsdUJBQVIsQ0FBbEI7QUFDQSxJQUFJTSxjQUFjTixtQkFBT0EsQ0FBQyx1QkFBUixDQUFsQjs7QUFFQSxJQUFJTyxNQUFNTixTQUFWOztBQUVBO0FBQ0E7QUFDQTs7QUFFQU0sSUFBSUMsR0FBSixDQUFRSixPQUFPLEtBQVAsQ0FBUjtBQUNBRyxJQUFJQyxHQUFKLENBQVFQLFFBQVFRLElBQVIsRUFBUjtBQUNBRixJQUFJQyxHQUFKLENBQVFQLFFBQVFTLFVBQVIsQ0FBbUIsRUFBRUMsVUFBVSxLQUFaLEVBQW5CLENBQVI7QUFDQUosSUFBSUMsR0FBSixDQUFRTCxjQUFSO0FBQ0FJLElBQUlDLEdBQUosQ0FBUVAsUUFBUVcsTUFBUixDQUFlVixLQUFLVyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsUUFBckIsQ0FBZixDQUFSOztBQUVBUCxJQUFJQyxHQUFKLENBQVEsR0FBUixFQUFhSCxXQUFiO0FBQ0FFLElBQUlDLEdBQUosQ0FBUSxRQUFSLEVBQWtCRixXQUFsQjs7QUFFQTtBQUNBQyxJQUFJQyxHQUFKLENBQVEsVUFBVU8sR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUNoQ0EsT0FBS2xCLFlBQVksR0FBWixDQUFMO0FBQ0QsQ0FGRDs7QUFJQTtBQUNBUSxJQUFJQyxHQUFKLENBQVEsVUFBVVUsR0FBVixFQUFlSCxHQUFmLEVBQW9CQyxHQUFwQixFQUF5QkMsSUFBekIsRUFBK0I7QUFDckM7QUFDQUQsTUFBSUcsTUFBSixDQUFXQyxPQUFYLEdBQXFCRixJQUFJRSxPQUF6QjtBQUNBSixNQUFJRyxNQUFKLENBQVdFLEtBQVgsR0FBbUJOLElBQUlSLEdBQUosQ0FBUWUsR0FBUixDQUFZLEtBQVosTUFBdUIsYUFBdkIsR0FBdUNKLEdBQXZDLEdBQTZDLEVBQWhFOztBQUVBO0FBQ0FGLE1BQUlPLE1BQUosQ0FBV0wsSUFBSUssTUFBSixJQUFjLEdBQXpCO0FBQ0FQLE1BQUlRLE1BQUosQ0FBVyxPQUFYO0FBQ0QsQ0FSRDs7QUFVQUMsT0FBT0MsT0FBUCxHQUFpQm5CLEdBQWpCLEMiLCJmaWxlIjoiMC5mNDMzY2M4ZDQyMzNhZmQ1ODY5ZS5ob3QtdXBkYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnaHR0cC1lcnJvcnMnKVxudmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG52YXIgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpXG52YXIgbG9nZ2VyID0gcmVxdWlyZSgnbW9yZ2FuJylcblxudmFyIGluZGV4Um91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvaW5kZXgnKVxudmFyIHVzZXJzUm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcnMnKVxuXG52YXIgYXBwID0gZXhwcmVzcygpXG5cbi8vIHZpZXcgZW5naW5lIHNldHVwXG4vL2FwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzJykpXG4vL2FwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ3B1ZycpXG5cbmFwcC51c2UobG9nZ2VyKCdkZXYnKSlcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSlcbmFwcC51c2UoY29va2llUGFyc2VyKCkpXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpXG5cbmFwcC51c2UoJy8nLCBpbmRleFJvdXRlcilcbmFwcC51c2UoJy91c2VycycsIHVzZXJzUm91dGVyKVxuXG4vLyBjYXRjaCA0MDQgYW5kIGZvcndhcmQgdG8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcbiAgbmV4dChjcmVhdGVFcnJvcig0MDQpKVxufSlcblxuLy8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbiAoZXJyLCByZXEsIHJlcywgbmV4dCkge1xuICAvLyBzZXQgbG9jYWxzLCBvbmx5IHByb3ZpZGluZyBlcnJvciBpbiBkZXZlbG9wbWVudFxuICByZXMubG9jYWxzLm1lc3NhZ2UgPSBlcnIubWVzc2FnZVxuICByZXMubG9jYWxzLmVycm9yID0gcmVxLmFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyIDoge31cblxuICAvLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcbiAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMClcbiAgcmVzLnJlbmRlcignZXJyb3InKVxufSlcblxubW9kdWxlLmV4cG9ydHMgPSBhcHBcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcHAuanMiXSwic291cmNlUm9vdCI6IiJ9